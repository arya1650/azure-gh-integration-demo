trigger:
  - main

pool:
  name: Default  # Your self-hosted agent

variables:
  imageName: fake-java-app
  acrName: fakejavareg26769
  acrLoginServer: $(acrName).azurecr.io
  imageTag: latest
  resourceGroup: myDevOpsRG
  aksCluster: myAksCluster

steps:

# 1. Login to Azure
- task: AzureCLI@2
  inputs:
    azureSubscription: devops-azure-service-conn
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      echo "Logging into Azure..."
      az account show

# 2. Docker login to ACR
- task: AzureCLI@2
  inputs:
    azureSubscription: devops-azure-service-conn
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      echo "Logging into ACR..."
      az acr login --name $(acrName)

# 3. Build Docker image
- script: |
    echo "Building Docker image..."
    docker build -t $(acrLoginServer)/$(imageName):$(imageTag) .
  displayName: 'Docker Build'

# 4. Push Docker image to ACR
- script: |
    echo "Pushing Docker image to ACR..."
    docker push $(acrLoginServer)/$(imageName):$(imageTag)
  displayName: 'Docker Push'

# 5. Set AKS context
- task: AzureCLI@2
  inputs:
    azureSubscription: devops-azure-service-conn
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      echo "Setting AKS context..."
      az aks get-credentials --resource-group $(resourceGroup) --name $(aksCluster) --overwrite-existing

# 6. Deploy to AKS using kubectl
- script: |
    echo "Deploying to AKS..."
    kubectl apply -f deployment.yaml
    kubectl apply -f service.yaml
    kubectl rollout restart deployment $(imageName)
  displayName: 'Deploy to AKS'

